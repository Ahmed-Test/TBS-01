# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump']
  endpoint:
    health:
      show-details: when-authorized
      roles: 'ROLE_ADMIN'
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        auto-time-requests: true

spring:
  application:
    name: TBS
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    favicon:
      enabled: false
  task:
    execution:
      thread-name-prefix: tbs-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: tbs-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
#  https://dzone.com/articles/spring-ldap
  ldap:
    urls: ldap://10.60.73.203:389
#    base: OU=HDFBS,DC=HDFBS,DC=LOCAL
    base: OU=Tamkeen,OU=HDFBS,DC=HDFBS,DC=LOCAL
    username: svc-belling
    password: Bellpaw$$44
  mail:
    host: 10.60.73.8
    port: 25
#    username: HDFBS.LOCAL/tbs@tamkeentech.sa
    username: tbs@tamkeentech.sa
    password: P#ssword5124
    protocol: smtp
    tls: true
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: 10.60.73.8
      connectiontimeout: 180000
      timeout: 180000

server:
  servlet:
    session:
      cookie:
        http-only: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'tbsApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #     allowed-origins: "*"
  #     allowed-methods: "*"
  #     allowed-headers: "*"
  #     exposed-headers: "Link,X-Total-Count"
  #     allow-credentials: true
  #     max-age: 1800
  mail:
    from: tbs@tamkeentech.sa
  swagger:
    default-include-pattern: /api/.*
    title: TBS API
    description: TBS API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license:
    license-url:
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
tbs:
  http:
    token-header-name: consumer-secret
    authentication-token: bearer AFDD0B4AD2EC172C586E2150770FBF9E
  payment:
    sadad-url: 'http://10.60.75.60:1001/api/sadad/billloadrq'
    sadad-application-id: 0
    credit-card-url: 'http://172.25.70.72:301/api/OnlinePayment'
    credit-card-refund-url: 'http://172.25.70.72:301/api/OnlinePayment/Refund'
    credit-card-biller-code: 'B1APP10092019'
    check-payment-url: 'http://172.25.70.72:301/api/CHeckTransactionStatus'
    notification-client-id: '---'
    notification-client-secret: '---'
    wahid-url: 'https://sso.tamkeen.land/auth/realms/tamkeen/protocol/openid-connect/token'
    wahid-secret: '06f4c17f-5c4a-492a-9a8e-a10eafec66c6'

    sts-merchant-id: '010000085'

    sts-secret-key: 'OTJkZGM5YzRkZmI0NzU0OTNkNDU0MGNi'
    sts-response-back-url: 'https://platform.tamkeentech.sa/billing-system-test/STSResponse'
    sts-post-form-url: 'https://srstaging.stspayone.com/SmartRoutePaymentWeb/SRPayMsgHandler'
    sts-refund-status: 'https://srstaging.stspayone.com/SmartRoutePaymentWeb/SRMsgHandler'
    url: 'http://localhost:8081/billing/payments/credit-card?'

  refund:
    sadad-url-refund: 'http://10.60.75.60:1001/Sender/api/Sadad/RefundLoadRq/test'
    sadad-shared-folder: '/sadad_share/'
  report:
    reports-folder: '/reports_share/'
  sentry-url:

  cron:
    payment-credit-card-correction: 0 2/5 * * * ?
    payment-sadad-correction: 0  5  *  *  * ?
    refund-sadad-sync: 0 0 * * * ?
    invoice-expired: 0 30 * * * ?
    audit-event-delete: 0 0 4 * * ?

